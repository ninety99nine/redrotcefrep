import{d as h}from"./debounce-LI0S5Wlu.js";import{T as p}from"./toastify-C63eJbzU.js";import{_ as l}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{c as u,a,r as n,o as g}from"./app-CaCDZNvD.js";const f={inject:["notificationState"],watch:{"notifications.length"(o,s){if(o>s){const t=this.notifications[this.notifications.length-1];let e,r;t.type=="success"?(e=`
                            <div class="flex space-x-2 p-4">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="mt-0.5 lucide shrink-0 lucide-circle-check-icon lucide-circle-check"><circle cx="12" cy="12" r="10"/><path d="m9 12 2 2 4-4"/></svg>
                                <p>${t.message}</p>
                                <div class="ms-auto">
                                    <button onclick="tostifyCustomClose(this)" type="button" class="inline-flex shrink-0 justify-center items-center size-5 rounded-lg text-green-800 opacity-50 hover:opacity-100 focus:outline-hidden focus:opacity-100 dark:text-white" aria-label="Close">
                                        <span class="sr-only">Close</span>
                                        <svg class="shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg>
                                    </button>
                                </div>
                            </div>
                            `,r="hs-toastify-on:opacity-100 opacity-0 fixed -top-37.5 right-5 z-90 transition-all duration-300 w-80 bg-green-200 text-sm text-green-900 border border-green-900 rounded-lg shadow-lg [&>.toast-close]:hidden dark:bg-neutral-800 dark:border-neutral-700 dark:text-neutral-400"):t.type=="warning"?(e=`
                            <div class="flex space-x-2 p-4">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="mt-0.5 lucide shrink-0 lucide-triangle-alert-icon lucide-triangle-alert"><path d="m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3"/><path d="M12 9v4"/><path d="M12 17h.01"/></svg>
                                <p>${t.message}</p>
                                <div class="ms-auto">
                                    <button onclick="tostifyCustomClose(this)" type="button" class="inline-flex shrink-0 justify-center items-center size-5 rounded-lg text-yellow-800 opacity-50 hover:opacity-100 focus:outline-hidden focus:opacity-100 dark:text-white" aria-label="Close">
                                        <span class="sr-only">Close</span>
                                        <svg class="shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg>
                                    </button>
                                </div>
                            </div>
                            `,r="hs-toastify-on:opacity-100 opacity-0 fixed -top-37.5 right-5 z-90 transition-all duration-300 w-80 bg-yellow-200 text-sm text-yellow-900 border border-yellow-900 rounded-lg shadow-lg [&>.toast-close]:hidden dark:bg-neutral-800 dark:border-neutral-700 dark:text-neutral-400"):(e=`
                            <div class="flex space-x-2 p-4">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="mt-0.5 lucide shrink-0 lucide-info-icon lucide-info"><circle cx="12" cy="12" r="10"/><path d="M12 16v-4"/><path d="M12 8h.01"/></svg>
                                <p>${t.message}</p>
                                <div class="ms-auto">
                                    <button onclick="tostifyCustomClose(this)" type="button" class="inline-flex shrink-0 justify-center items-center size-5 rounded-lg text-gray-800 opacity-50 hover:opacity-100 focus:outline-hidden focus:opacity-100 dark:text-white" aria-label="Close">
                                        <span class="sr-only">Close</span>
                                        <svg class="shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg>
                                    </button>
                                </div>
                            </div>
                            `,r="hs-toastify-on:opacity-100 opacity-0 fixed -top-37.5 right-5 z-90 transition-all duration-300 w-80 bg-gray-200 text-sm text-gray-900 border border-gray-900 rounded-lg shadow-lg [&>.toast-close]:hidden dark:bg-neutral-800 dark:border-neutral-700 dark:text-neutral-400"),p({text:e,close:!0,escapeMarkup:!1,className:r,duration:t.duration}).showToast()}}},computed:{notifications(){return this.notificationState.notifications}},mounted(){window.tostifyCustomClose=function(o){const s=o.closest(".toastify");s&&(s.classList.remove("hs-toastify-on:opacity-100"),s.classList.add("opacity-0","scale-95"),setTimeout(()=>{const t=s.querySelector(".toast-close");t&&t.click()},300))}}};function w(o,s,t,e,r,i){return null}const m=l(f,[["render",w]]),S={inject:["formState","orderState","storeState","notificationState"],components:{Notifications:m},data(){return{orderAgain:!1}},watch:{$route(o,s){this.orderAgain=s.name==="show-shop-order"&&o.name==="show-checkout";const t=s.params.alias||null;(o.params.alias||null)!==t&&this.showStore()},orderId(o){const s=this.orderAgain?this.order:null;this.orderState.resetOrderForm(),o?this.showOrder():this.prepareStoreForShopping(s)},orderForm:{handler(){this.canInspectShoppingCart&&(this.orderState.setIsInspectingShoppingCart(!0),this.inspectShoppingCartDelayed())},deep:!0}},computed:{store(){return this.storeState.store},alias(){return this.$route.params.alias||null},orderId(){return this.$route.params.order_id||null},order(){return this.orderState.order},hasOrder(){return this.order!=null},orderForm(){return this.orderState.orderForm},canInspectShoppingCart(){return this.orderState.canInspectShoppingCart}},methods:{async prepareStoreForShopping(o=null){await this.orderState.hasStateFromLocalStorage()?(await this.orderState.setStateFromLocalStorage(),await this.inspectShoppingCart()):o?(this.orderState.setOrderForm(o,!1),this.orderState.canInspectShoppingCart=!0):(this.orderState.setOrderForm(null,!1),setTimeout(()=>{this.orderState.canInspectShoppingCart=!0},1e3))},async showStore(){var o,s;try{this.storeState.isLoadingStore=!0;let t={params:{_relationships:["logo","categories"].join(",")}},e;if(window.storeId&&!this.alias)e=await axios.get(`/api/stores/${window.storeId}`,t);else if(this.alias)e=await axios.get(`/api/stores/alias/${this.alias}`,t);else throw new Error("No store ID or alias provided");this.storeState.setStore(e.data),this.orderId?await this.showOrder():await this.prepareStoreForShopping()}catch(t){const e=((s=(o=t==null?void 0:t.response)==null?void 0:o.data)==null?void 0:s.message)||(t==null?void 0:t.message)||"Something went wrong while fetching store";this.notificationState.showWarningNotification(e),this.formState.setServerFormErrors(t),console.error("Failed to fetch store:",t),this.$router.replace({name:"notFound"})}finally{this.storeState.isLoadingStore=!1}},async showOrder(){var o,s,t;try{this.orderState.isLoadingOrder=!0;let e={params:{store_id:this.store.id,_relationships:["orderProducts.photo","orderPromotions","orderFees","orderDiscounts","orderComments","customer","courier","deliveryMethod","deliveryAddress"].join(",")}};const i=(await axios.get(`/api/orders/${this.orderId||this.duplicateOrderId}`,e)).data;this.orderState.setOrder(i)}catch(e){const r=((s=(o=e==null?void 0:e.response)==null?void 0:o.data)==null?void 0:s.message)||(e==null?void 0:e.message)||"Something went wrong while fetching order";this.notificationState.showWarningNotification(r),this.formState.setServerFormErrors(e),console.error("Failed to fetch order:",e),((t=e.response)==null?void 0:t.status)===404&&await this.$router.replace({name:"show-storefront",params:{alias:window.storeId?null:this.store.alias}})}finally{this.orderState.isLoadingOrder=!1}},inspectShoppingCartDelayed:h(function(){this.inspectShoppingCart()},1e3),async inspectShoppingCart(){var o,s;try{this.orderState.setIsInspectingShoppingCart(!0);const t={inspect:!0,...this.orderForm,association:"shopper",store_id:this.store.id},e=await axios.post("/api/orders",t);this.orderState.setShoppingCart(e.data)}catch(t){const e=((s=(o=t==null?void 0:t.response)==null?void 0:o.data)==null?void 0:s.message)||(t==null?void 0:t.message)||"Something went wrong while inspecting shopping cart";this.notificationState.showWarningNotification(e),this.formState.setServerFormErrors(t),console.error("Failed to inspect shopping cart:",t)}finally{this.orderState.setIsInspectingShoppingCart(!1),this.orderState.setStateOnLocalStorage()}}},beforeUnmount(){this.orderState.resetOrderForm()},created(){this.store?this.orderId?this.showOrder():this.prepareStoreForShopping():this.showStore()}};function y(o,s,t,e,r,i){const d=n("Notifications"),c=n("router-view");return g(),u("div",null,[a(d),a(c)])}const b=l(S,[["render",y]]);export{b as default};
