import{I as w}from"./Input-QwDj8T87.js";import{M as _}from"./Modal-UBL0nJJO.js";import{c as h,b as i,e as u,a as m,g as p,t as b,d as x,n as E,i as c,H as F,r as n,o as l}from"./app-CAsQYp3T.js";import{B}from"./Button-Dy6BYOYD.js";import{L}from"./Loader-j3Xd9R0O.js";import{S as k}from"./Select-DopDm6jM.js";import{P as A}from"./Popover-DUH2qEVS.js";import{i as H}from"./stringUtils-Bvzw0-oW.js";import{S as R}from"./Skeleton-BfdDUyfM.js";import{B as q}from"./BackdropLoader-BeT7weW0.js";import{_ as C}from"./_plugin-vue_export-helper-DlAUqK2U.js";import{M as I}from"./move-left-Cp2UyO56.js";import{T as N}from"./trash-2-Cze44q0v.js";import"./Copy-B_MLEMQD.js";import"./ShineEffect-DjmscYxr.js";import"./createLucideIcon-Dd5tvPb0.js";import"./Tooltip-Gwe3QXsJ.js";import"./capitalize-ChUSrr1V.js";import"./refresh-ccw-D7oBzLST.js";import"./circle-check-Coc-yKcS.js";import"./circle-alert-BwdAp8OB.js";import"./x-ICmzimgK.js";import"./parsePhoneNumber-xMTQFMCS.js";const V={inject:["formState","storeState","teamMemberState","changeHistoryState","notificationState"],components:{Input:w,Modal:_,Button:B,Loader:L,Select:k,Popover:A,Skeleton:R,BackdropLoader:q},data(){return{Trash2:N,MoveLeft:I,roleOptions:[{label:"Admin",value:"admin"},{label:"Editor",value:"editor"},{label:"Viewer",value:"viewer"}]}},watch:{store(s,e){!e&&s&&this.setup()},"$route.params.user_id"(s){s&&(this.setup(),this.setActionButtons())}},computed:{store(){return this.storeState.store},teamMember(){return this.teamMemberState.teamMember},hasTeamMember(){return this.teamMemberState.hasTeamMember},userId(){return this.$route.params.user_id},isLoadingStore(){return this.storeState.isLoadingStore},isLoadingTeamMember(){return this.teamMemberState.isLoadingTeamMember},isEditing(){return this.$route.name==="edit-team-member"},isAdding(){return this.$route.name==="add-team-member"},teamMemberForm(){return this.teamMemberState.teamMemberForm},isSubmitting(){return this.changeHistoryState.actionButtons.length==0?!1:this.changeHistoryState.actionButtons[1].loading},isRemovingTeamMember(){return this.teamMemberState.isRemovingTeamMember}},methods:{isEmpty:H,goBack(){this.navigateToTeamMembers()},async setup(){this.teamMemberForm==null&&this.teamMemberState.setTeamMemberForm(null,this.isAdding),this.isEditing&&this.store&&await this.showTeamMember()},async navigateToTeamMembers(){await this.$router.replace({name:"show-team-members",query:{store_id:this.store.id,searchTerm:this.$route.query.searchTerm,filterExpressions:this.$route.query.filterExpressions,sortingExpressions:this.$route.query.sortingExpressions}})},async navigateToEditTeamMember(s){await this.$router.push({name:"edit-team-member",params:{user_id:s.id},query:{store_id:this.store.id,searchTerm:this.$route.query.searchTerm,filterExpressions:this.$route.query.filterExpressions,sortingExpressions:this.$route.query.sortingExpressions}})},async showTeamMember(){var s,e,t;try{this.teamMemberState.isLoadingTeamMember=!0;let r={params:{store_id:this.store.id,_relationships:["roles"].join(",")}};const a=(await axios.get(`/api/team-members/${this.userId}`,r)).data;this.teamMemberState.setTeamMember(a),this.teamMemberState.setTeamMemberForm(a)}catch(r){const o=((e=(s=r==null?void 0:r.response)==null?void 0:s.data)==null?void 0:e.message)||(r==null?void 0:r.message)||"Something went wrong while fetching team member";this.notificationState.showWarningNotification(o),this.formState.setServerFormErrors(r),console.error("Failed to fetch team member:",r),((t=r.response)==null?void 0:t.status)===404&&await this.navigateToTeamMembers()}finally{this.teamMemberState.isLoadingTeamMember=!1}},async addTeamMember(){var s,e;try{if(this.teamMemberState.isAddingTeamMember||this.teamMemberState.isUploading||(this.formState.hideFormErrors(),this.isEmpty(this.teamMemberForm.email)&&this.formState.setFormError("email","The email is required"),this.isEmpty(this.teamMemberForm.role_id)&&this.formState.setFormError("role_id","The role is required"),this.formState.hasErrors))return;this.teamMemberState.isAddingTeamMember=!0,this.changeHistoryState.actionButtons[1].loading=!0;const t={...this.getPayload(),store_id:this.store.id},o=(await axios.post("/api/team-members",t)).data.user;this.teamMemberForm.id=o.id,this.storeState.silentUpdate(),this.notificationState.showSuccessNotification("Team member added"),this.teamMemberState.saveOriginalState("Original team member"),await this.navigateToEditTeamMember(o)}catch(t){const r=((e=(s=t==null?void 0:t.response)==null?void 0:s.data)==null?void 0:e.message)||(t==null?void 0:t.message)||"Something went wrong while adding team member";this.notificationState.showWarningNotification(r),this.formState.setServerFormErrors(t),console.error("Failed to add team member:",t)}finally{this.teamMemberState.isAddingTeamMember=!1,this.changeHistoryState.actionButtons[1].loading=!1}},async updateTeamMember(){var s,e;try{if(this.teamMemberState.isUpdatingTeamMember||(this.formState.hideFormErrors(),this.isEmpty(this.teamMemberForm.email)&&this.formState.setFormError("email","The email is required"),this.isEmpty(this.teamMemberForm.role_id)&&this.formState.setFormError("role_id","The role is required"),this.formState.hasErrors))return;this.teamMemberState.isUpdatingTeamMember=!0,this.changeHistoryState.actionButtons[1].loading=!0;const t={...this.getPayload(),store_id:this.store.id};await axios.put(`/api/team-members/${this.teamMemberForm.id}`,t),this.storeState.silentUpdate(),this.notificationState.showSuccessNotification("Team member updated"),this.teamMemberState.saveOriginalState("Original team member")}catch(t){const r=((e=(s=t==null?void 0:t.response)==null?void 0:s.data)==null?void 0:e.message)||(t==null?void 0:t.message)||"Something went wrong while updating team member";this.notificationState.showWarningNotification(r),this.formState.setServerFormErrors(t),console.error("Failed to update team member:",t)}finally{this.teamMemberState.isUpdatingTeamMember=!1,this.changeHistoryState.actionButtons[1].loading=!1}},async removeTeamMember(s){var e,t;try{if(this.teamMemberState.isRemovingTeamMember)return;this.teamMemberState.isRemovingTeamMember=!0;const r={data:{store_id:this.store.id}};await axios.delete(`/api/team-members/${this.teamMember.id}`,r),this.storeState.silentUpdate(),this.notificationState.showSuccessNotification("Team member removed"),s(),await new Promise(o=>setTimeout(o,500)),await this.navigateToTeamMembers()}catch(r){const o=((t=(e=r==null?void 0:r.response)==null?void 0:e.data)==null?void 0:t.message)||(r==null?void 0:r.message)||"Something went wrong while removing team member";this.notificationState.showWarningNotification(o),this.formState.setServerFormErrors(r),console.error("Failed to remove team member:",r),s()}finally{this.teamMemberState.isRemovingTeamMember=!1}},getPayload(){return F(this.teamMemberForm)},setActionButtons(){(this.isAdding||this.isEditing)&&(this.changeHistoryState.removeButtons(),this.changeHistoryState.addDiscardButton(),this.changeHistoryState.addActionButton(this.isEditing?"Save Changes":"Add Team Member",this.isEditing?this.updateTeamMember:this.addTeamMember,"primary",null))},setTeamMemberForm(s){this.teamMemberState.teamMemberForm=s}},beforeRouteLeave(s,e,t){if(this.changeHistoryState.hasChangeHistory&&!window.confirm("You have unsaved changes. Are you sure you want to leave?"))return t(!1);t()},unmounted(){this.teamMemberState.reset()},created(){this.setup(),this.setActionButtons();const s=["undo","redo","jumpToHistory","resetHistoryToCurrent","resetHistoryToOriginal"];for(let e=0;e<s.length;e++){let t=s[e];this.changeHistoryState.listeners[t]=this.setTeamMemberForm}}},U={class:"pt-24 px-4"},O={class:"grid grid-cols-12 gap-4 mb-4"},P={class:"col-span-8 col-start-3"},j={class:"select-none bg-white rounded-lg p-4 mb-4"},D={class:"flex items-center space-x-4"},W={key:0,class:"flex items-center space-x-2"},z={key:1,class:"flex items-center space-x-1"},Y={class:"text-lg text-gray-700 font-semibold"},G={class:"relative mb-8"},J={class:"bg-white rounded-lg space-y-4 p-4"},K={class:"space-y-2"},Q={class:"font-bold text-black"},X={class:"flex justify-end"},Z={class:"mb-8"},$={class:"font-bold text-black"};function ee(s,e,t,r,o,a){const f=n("Button"),g=n("Skeleton"),M=n("Popover"),S=n("BackdropLoader"),T=n("Input"),v=n("Select"),y=n("Modal");return l(),h("div",U,[i("div",O,[i("div",P,[i("div",j,[i("div",D,[m(f,{size:"xs",type:"light",action:a.goBack,leftIcon:o.MoveLeft},{default:p(()=>[...e[4]||(e[4]=[i("span",null,"Back",-1)])]),_:1},8,["action","leftIcon"]),a.isLoadingStore||a.isLoadingTeamMember||a.isEditing&&!a.hasTeamMember?(l(),h("div",W,[m(g,{width:"w-40"}),m(g,{width:"w-4"})])):(l(),h("div",z,[i("h1",Y,b(a.isAdding?"Add Team Member":a.teamMemberForm.name||"..."),1),m(M,{content:"Team members are users assigned to manage your store with specific roles.",placement:"top"})]))])]),i("div",G,[a.isLoadingTeamMember||a.isSubmitting?(l(),x(S,{key:0,showSpinningLoader:!1,class:"rounded-lg"})):u("",!0),i("div",J,[m(T,{type:"email",label:"Email",placeholder:"john@store.com",modelValue:a.teamMemberForm.email,"onUpdate:modelValue":e[0]||(e[0]=d=>a.teamMemberForm.email=d),errorText:a.formState.getFormError("email"),tooltipContent:"The email address of the team member",onInput:e[1]||(e[1]=d=>a.teamMemberState.saveStateDebounced("Email changed"))},null,8,["modelValue","errorText"]),m(v,{class:"w-full",search:!1,label:"Role",options:o.roleOptions,modelValue:a.teamMemberForm.role_id,"onUpdate:modelValue":e[2]||(e[2]=d=>a.teamMemberForm.role_id=d),errorText:a.formState.getFormError("role_id"),onChange:e[3]||(e[3]=d=>a.teamMemberState.saveStateDebounced("Role changed")),tooltipContent:"Select the role for this team member"},null,8,["options","modelValue","errorText"])])]),a.teamMember?(l(),h("div",{key:0,class:E(["flex items-center justify-between space-x-4 overflow-hidden rounded-lg p-4 border mb-20",a.isLoadingTeamMember?"border-gray-300 bg-gray-50":"border-red-300 bg-red-50"])},[i("div",K,[i("p",null,[e[5]||(e[5]=c("Remove ",-1)),i("span",Q,b(a.teamMemberForm.name),1),e[6]||(e[6]=c("?",-1))]),e[7]||(e[7]=i("p",{class:"text-sm"},"Once this team member is removed, they will lose access to the store.",-1))]),i("div",X,[m(y,{triggerType:"danger",approveType:"danger",approveLeftIcon:o.Trash2,triggerText:"Remove Team Member",approveText:"Remove Team Member",approveAction:a.removeTeamMember,triggerLoading:a.isRemovingTeamMember,approveLoading:a.isRemovingTeamMember},{content:p(()=>[e[10]||(e[10]=i("p",{class:"text-lg font-bold border-b border-gray-300 border-dashed pb-4 mb-4"},"Confirm Remove",-1)),i("p",Z,[e[8]||(e[8]=c("Are you sure you want to permanently remove ",-1)),i("span",$,b(a.teamMemberForm.name),1),e[9]||(e[9]=c("?",-1))])]),_:1},8,["approveLeftIcon","approveAction","triggerLoading","approveLoading"])])],2)):u("",!0)])])])}const _e=C(V,[["render",ee]]);export{_e as default};
